#!/bin/bash
SERVER="mindils@104.253.1.57"
LOCAL_PORT=4000
REMOTE_PORT=4000
PID_FILE="/tmp/ssh_tunnel_4000.pid"

start_tunnel() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if ps -p "$PID" > /dev/null 2>&1; then
            echo "‚ùå –¢—É–Ω–Ω–µ–ª—å —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: $PID)"
            return 1
        else
            rm -f "$PID_FILE"
        fi
    fi

    # –£–±–∏–≤–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —Ç—É–Ω–Ω–µ–ª–∏ –Ω–∞ —ç—Ç–æ–º –ø–æ—Ä—Ç—É
    OLD_PIDS=$(pgrep -f "ssh.*[L].*${LOCAL_PORT}.*${SERVER}")
    if [ -n "$OLD_PIDS" ]; then
        echo "üßπ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ç—É–Ω–Ω–µ–ª–∏: $OLD_PIDS"
        kill $OLD_PIDS 2>/dev/null
        sleep 1
    fi

    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º SSH —Ç—É–Ω–Ω–µ–ª—å..."

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å –∏ —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ PID
    ssh -g -f -N -L ${LOCAL_PORT}:localhost:${REMOTE_PORT} ${SERVER}
    SSH_EXIT=$?

    if [ $SSH_EXIT -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ SSH (–∫–æ–¥: $SSH_EXIT)"
        return 1
    fi

    sleep 2

    # –ò—â–µ–º PID –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
    # –ò—â–µ–º SSH –ø—Ä–æ—Ü–µ—Å—Å —Å –Ω—É–∂–Ω—ã–º –ø–æ—Ä—Ç–æ–º –∏ —Å–µ—Ä–≤–µ—Ä–æ–º
    PID=$(ps aux | grep "[s]sh.*${LOCAL_PORT}.*${SERVER}" | grep -v grep | awk '{print $2}' | head -n1)

    if [ -z "$PID" ]; then
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫
        PID=$(pgrep -f "ssh.*${SERVER}" | while read p; do
            if ps -p $p -o args= | grep -q "${LOCAL_PORT}"; then
                echo $p
                break
            fi
        done)
    fi

    if [ -n "$PID" ]; then
        echo "$PID" > "$PID_FILE"
        echo "‚úÖ –¢—É–Ω–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ (PID: $PID)"
        echo ""
        echo "üìç –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost:${LOCAL_PORT}"

        IP=$(hostname -I | awk '{print $1}')
        echo "üåç –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://${IP}:${LOCAL_PORT}"
        echo ""

        echo "üîå –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤:"
        sudo netstat -tlnp 2>/dev/null | grep ":${LOCAL_PORT}" || sudo ss -tlnp 2>/dev/null | grep ":${LOCAL_PORT}" || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å (–Ω—É–∂–µ–Ω sudo)"
    else
        echo "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ PID –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Ç—É–Ω–Ω–µ–ª—è"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –≤—Ä—É—á–Ω—É—é: ps aux | grep ssh"
        return 1
    fi
}

stop_tunnel() {
    STOPPED=0

    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ PID —Ñ–∞–π–ª—É
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if ps -p "$PID" > /dev/null 2>&1; then
            echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å –∏–∑ PID —Ñ–∞–π–ª–∞ (PID: $PID)..."
            kill "$PID"
            STOPPED=1
        fi
        rm -f "$PID_FILE"
    fi

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∏—â–µ–º –∏ —É–±–∏–≤–∞–µ–º –≤—Å–µ —Ç—É–Ω–Ω–µ–ª–∏ –Ω–∞ —ç—Ç–æ–º –ø–æ—Ä—Ç—É
    RUNNING_PIDS=$(ps aux | grep "[s]sh.*${LOCAL_PORT}.*${SERVER}" | awk '{print $2}')

    if [ -n "$RUNNING_PIDS" ]; then
        echo "üõë –ù–∞–π–¥–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—É–Ω–Ω–µ–ª–∏: $RUNNING_PIDS"
        for PID in $RUNNING_PIDS; do
            echo "   –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PID: $PID"
            kill "$PID" 2>/dev/null
            STOPPED=1
        done
    fi

    if [ $STOPPED -eq 1 ]; then
        sleep 1
        echo "‚úÖ –¢—É–Ω–Ω–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå –¢—É–Ω–Ω–µ–ª—å –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

status_tunnel() {
    FOUND=0

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PID —Ñ–∞–π–ª
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if ps -p "$PID" > /dev/null 2>&1; then
            echo "‚úÖ –¢—É–Ω–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç (PID –∏–∑ —Ñ–∞–π–ª–∞: $PID)"
            FOUND=1
        else
            echo "‚ö†Ô∏è  PID —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å $PID –Ω–µ –Ω–∞–π–¥–µ–Ω"
            rm -f "$PID_FILE"
        fi
    fi

    # –ò—â–µ–º –≤—Å–µ —Ç—É–Ω–Ω–µ–ª–∏ –Ω–∞ —ç—Ç–æ–º –ø–æ—Ä—Ç—É
    RUNNING_PIDS=$(ps aux | grep "[s]sh.*${LOCAL_PORT}.*${SERVER}" | awk '{print $2}')

    if [ -n "$RUNNING_PIDS" ]; then
        if [ $FOUND -eq 0 ]; then
            echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Ç—É–Ω–Ω–µ–ª–∏ –±–µ–∑ PID —Ñ–∞–π–ª–∞:"
        fi
        for PID in $RUNNING_PIDS; do
            echo "   PID: $PID - $(ps -p $PID -o args= | head -c 100)"
            FOUND=1
        done
    fi

    if [ $FOUND -eq 0 ]; then
        echo "‚ùå –¢—É–Ω–Ω–µ–ª—å –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi

    echo ""
    IP=$(hostname -I | awk '{print $1}')
    echo "üìç –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost:${LOCAL_PORT}"
    echo "üåç –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://${IP}:${LOCAL_PORT}"
    echo ""

    echo "üîå –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤:"
    sudo netstat -tlnp 2>/dev/null | grep ":${LOCAL_PORT}" || sudo ss -tlnp 2>/dev/null | grep ":${LOCAL_PORT}" || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å (–Ω—É–∂–µ–Ω sudo)"
    echo ""

    if command -v curl > /dev/null 2>&1; then
        echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏..."

        if timeout 3 curl -s -o /dev/null -w "%{http_code}" http://localhost:${LOCAL_PORT} 2>&1 | grep -q "200\|301\|302\|000"; then
            echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ (localhost): –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            echo "‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω–æ (localhost): –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        fi

        if timeout 3 curl -s -o /dev/null -w "%{http_code}" http://${IP}:${LOCAL_PORT} 2>&1 | grep -q "200\|301\|302\|000"; then
            echo "‚úÖ –ü–æ IP (${IP}): –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            echo "‚ö†Ô∏è  –ü–æ IP (${IP}): –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    fi
}

restart_tunnel() {
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å..."
    stop_tunnel
    sleep 2
    start_tunnel
}

case "$1" in
    start)
        start_tunnel
        ;;
    stop)
        stop_tunnel
        ;;
    status)
        status_tunnel
        ;;
    restart)
        restart_tunnel
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|status|restart}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å SSH —Ç—É–Ω–Ω–µ–ª—å"
        echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SSH —Ç—É–Ω–Ω–µ–ª—å"
        echo "  status  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç—É–Ω–Ω–µ–ª—è"
        echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å"
        exit 1
        ;;
esac