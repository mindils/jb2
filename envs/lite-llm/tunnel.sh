#!/bin/bash

SERVER="mindils@104.253.1.57"
LOCAL_PORT=4000
REMOTE_PORT=4000
PID_FILE="/tmp/ssh_tunnel_4000.pid"

start_tunnel() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ —Ç—É–Ω–Ω–µ–ª—å
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if ps -p "$PID" > /dev/null 2>&1; then
            echo "‚ùå –¢—É–Ω–Ω–µ–ª—å —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: $PID)"
            return 1
        else
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π PID —Ñ–∞–π–ª
            rm -f "$PID_FILE"
        fi
    fi

    # –ó–∞–ø—É—Å–∫–∞–µ–º SSH —Ç—É–Ω–Ω–µ–ª—å
    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º SSH —Ç—É–Ω–Ω–µ–ª—å..."
    ssh -f -N -L ${LOCAL_PORT}:localhost:${REMOTE_PORT} ${SERVER}

    # –î–∞—ë–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
    sleep 1

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
    PID=$(pgrep -f "ssh -f -N -L ${LOCAL_PORT}:localhost:${REMOTE_PORT} ${SERVER}")
    if [ -n "$PID" ]; then
        echo "$PID" > "$PID_FILE"
        echo "‚úÖ –¢—É–Ω–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ (PID: $PID)"
        echo "üìç –î–æ—Å—Ç—É–ø: http://localhost:${LOCAL_PORT}"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç—É–Ω–Ω–µ–ª—è"
        return 1
    fi
}

stop_tunnel() {
    if [ ! -f "$PID_FILE" ]; then
        echo "‚ùå PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –¢—É–Ω–Ω–µ–ª—å –Ω–µ –∑–∞–ø—É—â–µ–Ω."
        return 1
    fi

    PID=$(cat "$PID_FILE")

    if ps -p "$PID" > /dev/null 2>&1; then
        echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å (PID: $PID)..."
        kill "$PID"
        rm -f "$PID_FILE"
        echo "‚úÖ –¢—É–Ω–Ω–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å —Å PID $PID –Ω–µ –Ω–∞–π–¥–µ–Ω"
        rm -f "$PID_FILE"
    fi
}

status_tunnel() {
    if [ ! -f "$PID_FILE" ]; then
        echo "‚ùå –¢—É–Ω–Ω–µ–ª—å –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi

    PID=$(cat "$PID_FILE")

    if ps -p "$PID" > /dev/null 2>&1; then
        echo "‚úÖ –¢—É–Ω–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç (PID: $PID)"
        echo "üìç –î–æ—Å—Ç—É–ø: http://localhost:${LOCAL_PORT}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        if command -v curl > /dev/null 2>&1; then
            if curl -s -o /dev/null -w "%{http_code}" http://localhost:${LOCAL_PORT} > /dev/null 2>&1; then
                echo "üåê –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω"
            else
                echo "‚ö†Ô∏è  –°–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
            fi
        fi
    else
        echo "‚ùå –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–æ PID —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        rm -f "$PID_FILE"
        return 1
    fi
}

restart_tunnel() {
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å..."
    stop_tunnel
    sleep 1
    start_tunnel
}

case "$1" in
    start)
        start_tunnel
        ;;
    stop)
        stop_tunnel
        ;;
    status)
        status_tunnel
        ;;
    restart)
        restart_tunnel
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|status|restart}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å SSH —Ç—É–Ω–Ω–µ–ª—å"
        echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SSH —Ç—É–Ω–Ω–µ–ª—å"
        echo "  status  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç—É–Ω–Ω–µ–ª—è"
        echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å"
        exit 1
        ;;
esac
