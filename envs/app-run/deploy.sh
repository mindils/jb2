#!/bin/bash
set -e

PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"
cd "$PROJECT_DIR"

echo "=== JB2 Deploy ==="
echo "–í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M:%S')"

# 1. Git pull
echo "[1/5] Git pull..."
git pull

# 2. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "[2/5] –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
cd envs/app-run
docker compose down 2>/dev/null || true

# 3. –û—á–∏—Å—Ç–∫–∞ (–ë–ï–ó —É–¥–∞–ª–µ–Ω–∏—è dangling –æ–±—Ä–∞–∑–æ–≤ - –æ–Ω–∏ –Ω—É–∂–Ω—ã –¥–ª—è –∫–µ—à–∞!)
echo "[3/5] –û—á–∏—Å—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker container prune -f

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã jb2, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏ —Å–æ–∑–¥–∞–Ω—ã > 7 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
# –≠—Ç–æ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º–µ—Å—Ç–æ, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏–µ –æ–±—Ä–∞–∑—ã –¥–ª—è –æ—Ç–∫–∞—Ç–∞
echo "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤ jb2 (>7 –¥–Ω–µ–π)..."
docker images jb2 --format "{{.ID}} {{.CreatedAt}}" | while read id created_date; do
    # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è (—Ñ–æ—Ä–º–∞—Ç –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è)
    created_timestamp=$(date -d "$created_date" +%s 2>/dev/null || echo "0")
    current_timestamp=$(date +%s)
    days_old=$(( (current_timestamp - created_timestamp) / 86400 ))

    if [ "$days_old" -gt 7 ]; then
        echo "  –£–¥–∞–ª—è—é –æ–±—Ä–∞–∑ $id (–≤–æ–∑—Ä–∞—Å—Ç: $days_old –¥–Ω–µ–π)"
        docker rmi -f "$id" 2>/dev/null || true
    fi
done

# 4. –°–±–æ—Ä–∫–∞
echo "[4/5] –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ (20-40 –º–∏–Ω)..."
export DOCKER_BUILDKIT=0
docker compose build 2>&1 | tee /tmp/jb2-build.log

# 5. –ó–∞–ø—É—Å–∫
echo "[5/5] –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ
sleep 30

echo "=== Deploy –∑–∞–≤–µ—Ä—à–µ–Ω ==="
echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8085"
echo "–õ–æ–≥–∏: docker logs -f jb2"
echo ""
echo "üí° –°–æ–≤–µ—Ç: –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ./cleanup-logs.sh"